---

kind: "List"
apiVersion: "v1"
metadata: 
  name: "nexus"
items: 
  - 
    kind: "BuildConfig"
    apiVersion: "v1"
    metadata: 
      name: "nexus3"
    spec: 
      triggers: 
        - 
          type: "GitHub"
          github: 
            secret: "secret"
        - 
          type: "Generic"
          generic: 
            secret: "secret"
        - 
          type: "ImageChange"
          imageChange: {}
        - 
          type: "ConfigChange"
      source: 
        type: "Git"
        git: 
          uri: "https://github.com/gitlabbin/docker-rhel-nexus.git"
          ref: "master"
        contextDir: "3.7.1/centos"
      strategy: 
        type: "Docker"
        dockerStrategy: 
          dockerfilePath: "Dockerfile"
      output: 
        to: 
          kind: "ImageStreamTag"
          name: "nexus3:latest"
      resources: {}
  - 
    kind: "ImageStream"
    apiVersion: "v1"
    metadata: 
      name: "nexus3"
    spec: 
      dockerImageRepository: ""
      tags: 
        - 
          name: "latest"
  - 
    kind: "Template"
    apiVersion: "v1"
    metadata: 
      name: "nexus"
      annotations: 
        description: "Nexus Repository Manager 3"
        tags: "repository-manager,nexus3,nexus,sonatype"
    labels: 
      application: "nexus"
      createdBy: "template-nexus"
    parameters: 
      - 
        description: "The name for the application. The service will be named like the application."
        displayName: "Application name."
        name: "APPLICATION_NAME"
        value: "nexus"
      - 
        description: "Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>"
        displayName: "Nexus instance hostname"
        name: "APPLICATION_HOSTNAME"
      - 
        description: "Persistent Volume Size (512Mi, 5Gi,...)"
        displayName: "Persistent Volume Size"
        name: "SIZE"
        value: "50Gi"
        required: true
      - 
        description: Max memory allocated to the Nexus pod
        displayName: Max Memory
        name: MAX_MEMORY
        required: true
        value: 4Gi
    objects: 
      - 
        kind: "PersistentVolumeClaim"
        apiVersion: "v1"
        metadata: 
          name: "${APPLICATION_NAME}"
        spec: 
          accessModes: 
            - "ReadWriteOnce"
          resources: 
            requests: 
              storage: "${SIZE}"
      - 
        kind: "DeploymentConfig"
        apiVersion: "v1"
        metadata: 
          name: "${APPLICATION_NAME}"
          creationTimestamp: null
          labels: 
            application: "${APPLICATION_NAME}"
        spec: 
          strategy: 
            type: "Recreate"
            recreateParams:
              timeoutSeconds: 1200
            resources: {}
          triggers: 
            - 
              type: "ImageChange"
              imageChangeParams: 
                automatic: true
                containerNames: 
                  - "${APPLICATION_NAME}"
                from: 
                  kind: "ImageStreamTag"
                  name: "nexus3:latest"
            - 
              type: "ConfigChange"
          replicas: 1
          selector: 
            name: "${APPLICATION_NAME}"
          template: 
            metadata: 
              labels: 
                name: "${APPLICATION_NAME}"
            spec: 
              volumes: 
                - 
                  name: "nexus-data"
                  persistentVolumeClaim: 
                    claimName: "${APPLICATION_NAME}"
              containers: 
                - 
                  name: "${APPLICATION_NAME}"
                  image: "nexus3"
                  ports: 
                    - 
                      name: "web-port"
                      containerPort: 8081
                      protocol: "TCP"
                  volumeMounts: 
                    - 
                      name: "nexus-data"
                      mountPath: "/nexus-data"
                  resources:
                    limits:
                      memory: ${MAX_MEMORY}
                    requests:
                      memory: 512Mi
                  terminationMessagePath: "/dev/termination-log"
                  imagePullPolicy: "Always"
                  securityContext: 
                    capabilities: {}
                    privileged: false
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /
                      port: 8081
                      scheme: HTTP
                    initialDelaySeconds: 60
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  livenessProbe:
                    exec:
                      command:
                      - echo
                      - ok
                    failureThreshold: 3
                    initialDelaySeconds: 60
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
              restartPolicy: "Always"
              dnsPolicy: "ClusterFirst"
      - 
        kind: "Route"
        apiVersion: "v1"
        metadata: 
          name: "${APPLICATION_NAME}"
          creationTimestamp: null
        spec: 
          host: "${APPLICATION_HOSTNAME}"
          to: 
            kind: "Service"
            name: "${APPLICATION_NAME}"
      - 
        kind: "Service"
        apiVersion: "v1"
        metadata: 
          name: "${APPLICATION_NAME}"
          creationTimestamp: null
          labels: 
            application: "${APPLICATION_NAME}"
        spec: 
          ports: 
            - 
              name: "web"
              protocol: "TCP"
              port: 8081
              targetPort: 8081
              nodePort: 0
          selector: 
            deploymentconfig: "${APPLICATION_NAME}"
          portalIP: ""
          type: "ClusterIP"
          sessionAffinity: "None"

